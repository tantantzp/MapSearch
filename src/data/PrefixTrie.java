package data;import java.util.HashMap;import java.util.HashSet;import java.util.Map;import java.util.Set;public class PrefixTrie {	private TrieNode rootNode;	Map<String,Set<Integer>> invertList = null;		public PrefixTrie(){		rootNode = new TrieNode();		invertList = new HashMap<String,Set<Integer>>();	}		public void addGram(String gram, Integer index){		if(invertList.containsKey(gram)){			invertList.get(gram).add(index);		}else{			Set<Integer> tmp = new HashSet<Integer>();			tmp.add(index);			invertList.put(gram, tmp);		}				if(rootNode.gramSet.contains(gram))	return;		rootNode.addGram(gram,0);		}		public Set<Integer> prefixSearch(String prefix){		Set<String> gramSet = rootNode.prefixSearch(prefix);		if(gramSet == null)	return null;		Set<Integer> indexRes = new HashSet<Integer>();				for(String gramStr :gramSet){			Set<Integer> tmp = invertList.get(gramStr);			indexRes.addAll(tmp);	    }				return indexRes;		}}